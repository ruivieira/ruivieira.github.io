<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Index on Rui Vieira</title><link>/</link><description>Recent content in Index on Rui Vieira</description><generator>Hugo -- gohugo.io</generator><language>en-uk</language><atom:link href="/index.xml" rel="self" type="application/rss+xml"/><item><title>Hatch Poetry</title><link>/blog/2023-09-03.html</link><pubDate>Sun, 03 Sep 2023 00:00:00 +0000</pubDate><guid>/blog/2023-09-03.html</guid><description>I&amp;rsquo;ve been a long-time user of Poetry for my Python projects, and it&amp;rsquo;s been a welcome change. However, my recent exploration into Hatch has sparked my interest.
Poetry simplifies dependency management with its unified pyproject.toml, but Hatch excels in scenarios requiring complex workflows. A common personal use-case is Docker multi-stage builds. Hatch, with its conventional requirements.txt and setup.py, offers more granular control, making complex configurations easier.
Hatch also aligns closely with the existing Python ecosystem due to its use of traditional setup files, linking old with new workflows, ensuring a better integration.</description></item><item><title>Exception Bubbling in Python</title><link>/blog/2023-09-02.html</link><pubDate>Sun, 03 Sep 2023 10:53:23 +0100</pubDate><guid>/blog/2023-09-02.html</guid><description>Exception Bubbling in PythonOne aspect of Java that occasionally nudges at me is its explicit approach to exception handling. Java requires developers to either handle exceptions via try-catch blocks or declare them in method signatures. While it does enforce robustness, it sometimes feels a bit too constrained, especially when compared to the flexible nature of Python.
Recently, I crafted a solution in Python for k8sutils. Instead of the usual explicit exception handling or modifying method signatures, I created a Python decorator - akin to annotations in Java - that substitutes an exception for another without altering the underlying code.</description></item><item><title>Form and Function in Flat Planes</title><link>/draw/form-and-function-in-flat-planes.html</link><pubDate>Sun, 28 May 2023 17:30:47 +0100</pubDate><guid>/draw/form-and-function-in-flat-planes.html</guid><description>This is a caption for Drawing 2.</description></item><item><title>Harmonic Interference (Three Colors)</title><link>/draw/harmonic-interference-three-colors.html</link><pubDate>Sun, 28 May 2023 17:30:47 +0100</pubDate><guid>/draw/harmonic-interference-three-colors.html</guid><description>This is a caption for Drawing 1.</description></item><item><title>Mid-Century Monoliths</title><link>/draw/mid-century-monoliths.html</link><pubDate>Sun, 28 May 2023 23:55:10 +0100</pubDate><guid>/draw/mid-century-monoliths.html</guid><description>This is a caption for Drawing 1.</description></item><item><title>Nocturnal Ripples</title><link>/draw/nocturnal-ripples.html</link><pubDate>Sun, 28 May 2023 20:53:24 +0100</pubDate><guid>/draw/nocturnal-ripples.html</guid><description>This is a caption for Drawing 1.</description></item><item><title>(Semi) handcrafted RSS</title><link>/semi-handcrafted-rss.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/semi-handcrafted-rss.html</guid><description>I&amp;rsquo;ve been using a minimalist blog setup for some time now.
I was having something of a framework fatigue after switching between a few static site generators. Each new generator I decided to try implied usually either learning a new programming language (Python, Ruby, Go) to perform basic setup and a new template engine syntax1. Typically I wasn&amp;rsquo;t using the vast majority of the features available for each generator. And finally, most of the generators I tried over the years rely on heavy configuration if I want to maintain the site organisation and look.</description></item><item><title>58 bytes of CSS to look great nearly everywhere</title><link>/58-bytes-of-css-to-look-great-nearly-everywhere.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/58-bytes-of-css-to-look-great-nearly-everywhere.html</guid><description>The original page seems to have disappeared from the Internet1 (see: link rot), so the original contents are kept here.
When making this website, I wanted a simple, reasonable way to make it look good on most displays. Not counting any minimization techniques, the following 58 bytes worked well for me:
main { max-width: 38rem; padding: 2rem; margin: auto; } Let&amp;rsquo;s break this down.
max-width: 38rem It appears that the default font size for most browsers is 16px, so 38rem is 608px.</description></item><item><title>A Gibbs Sampler in Crystal</title><link>/a-gibbs-sampler-in-crystal.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/a-gibbs-sampler-in-crystal.html</guid><description>Recently, I&amp;rsquo;ve been following with interest the development of the Crystal language.
Crystal is a statically typed language with a syntax resembling Ruby&amp;rsquo;s. The main features which drawn me to it were its simple boilerplate-free syntax (which is ideal for quick prototyping), tied with the ability to compile directly to native code along with a dead simple way of creating bindings to existing C code.
These features make it quite attractive, in my opinion, for scientific computing.</description></item><item><title>A simple Python benchmark exercise</title><link>/a-simple-python-benchmark-exercise.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/a-simple-python-benchmark-exercise.html</guid><description>Recently when discussing the Crystal language and specifically the Gibbs sample blog post with a colleague, he mentioned that the Python benchmark numbers looked a bit off and not consistent with his experience of numerical programming in Python.
To recall, the numbers were:
Language Time(s) R 364.8 Python 144.0 Scala 9.896 Crystal 5.171 C 5.038 To have a better understanding of what is happening, I&amp;rsquo;ve decided to profile and benchmark that code (running on Python 3.</description></item><item><title>A streaming ALS implementation</title><link>/a-streaming-als-implementation.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/a-streaming-als-implementation.html</guid><description>In this blog post I would like to talk a little bit about recommendation engines in general and how to build a streaming recommendation engine on top of Apache Spark.
I will start by introducing the concept of collaborative filterig, and focus in two variants: batch and streaming Alternating Least Squares (ALS). I will look at the principles of a streaming distributed recommendation engine on Spark and finally, I&amp;rsquo;ll talk about practical issues when using these methods.</description></item><item><title>Anaconda</title><link>/anaconda.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/anaconda.html</guid><description>EnvironmentsCreateTo create a new environment foo use
$ conda create --name foo And to activate it use
$ conda activate foo</description></item><item><title>Ansible</title><link>/ansible.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/ansible.html</guid><description>Ansible notes.
InstallationDebian/Ubuntu$ sudo apt update $ sudo apt install software-properties-common $ sudo add-apt-repository --yes --update ppa:ansible/ansible $ sudo apt install ansible ReferenceInstalling packagesTo install a remote deb package with Ansible we can use, for instance
- name: Install Wezterm (Ubuntu) apt: deb: https://github.com/wez/wezterm/releases/download/20211205-192649-672c1cc1/wezterm-20211205-192649-672c1cc1.Ubuntu20.04.deb</description></item><item><title>Bayesian estimation of changepoints</title><link>/bayesian-estimation-of-changepoints.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/bayesian-estimation-of-changepoints.html</guid><description>A common introductory problem in Bayesian changepoint detection is the record of UK coal mining disasters from 1851 to 1962. More information can be found in Carlin, Gelfand and Smith (1992).
As we can see from the plot below, the number of yearly disasters ranges from 0 to 6 and we will assume that at some point within this time range a change in the accident rate has occured.
The number of yearly disasters can be modelled as a Poisson with a unknown rate depending on the changepoint $k$:</description></item><item><title>Bots</title><link>/bots.html</link><pubDate>Sun, 03 Sep 2023 10:53:23 +0100</pubDate><guid>/bots.html</guid><description>ArXivist A bot which periodically toots a paper published on ArXiV. The main Mastodon page of the bot can be found at https://botsin.space/@arxivstats. The current queue can be found at https://w6118k.deta.dev/
Mesozoic A bot that publishes updates to Mastodon.</description></item><item><title>Brutalist web design</title><link>/brutalist-web-design.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/brutalist-web-design.html</guid><description>The major guidelines of the Brutalist web design 1 are:
Content is readable on all reasonable screens and devicesüëç This guideline is followed by this site. The vast majority of the pages work with all major browsers, implement a responsive design. They also work with Javascript disabled as described in site details. It even works with unreasonable browsers, screens and devices, such as Internet Explorer 6 (2001) and NCA Mosaic 2 (1993).</description></item><item><title>CLI</title><link>/cli.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/cli.html</guid><description>Life on the CLILife on the CLI is a journey of exploration and experimentation, where we are free to push the boundaries of what is possible and to create something truly extraordinary. It is a world of endless potential and boundless possibility, where every day brings new challenges and opportunities.
Essentials CLI tools, so useful
Effortlessly perform tasks
Time-saving, essential
&amp;mdash; &amp;ldquo;CLI tools, a necessity&amp;rdquo; Haiku
Emacs Mosh1, the mobile shell https://mosh.</description></item><item><title>Clojure</title><link>/clojure.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/clojure.html</guid><description>Notes on Clojure.
ReferenceConcatenating strings(require &amp;#39;[clojure.string :as string]) (string/join [&amp;#34;foo&amp;#34; &amp;#34;bar&amp;#34;]) List files recursivelyClojureTo list files recursively in Clojure1
(file-seq &amp;#34;/etc&amp;#34;) BabashkaIf using Babashka, the following works:
(file-seq (clojure.java.io/file &amp;#34;/etc&amp;#34;)) Filter by extension(filter #(.endsWith (.toString %) &amp;#34;.conf&amp;#34;) (file-seq &amp;#34;/etc&amp;#34;)) Get home directory(def home (System/getProperty &amp;#34;user.home&amp;#34;)) Filter collectionUse the syntax (filter predicate collection). For instance, to filter a collection of strings that end with bar, do:
(def strings [&amp;#34;Foobar&amp;#34; &amp;#34;Barfoo&amp;#34; &amp;#34;Foobaz&amp;#34; &amp;#34;Barbar&amp;#34;]) (filter (fn [s] (clojure.</description></item><item><title>Coconut</title><link>/coconut.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/coconut.html</guid><description>Trying coconut!
&amp;#34;hello, world!&amp;#34; |&amp;gt; print hello, world! def binexp(x) = 2**x 5 |&amp;gt; binexp |&amp;gt; print 32 def last_two(_ + [a, b]): return a, b def xydict_to_xytuple({&amp;#34;x&amp;#34;:x is int, &amp;#34;y&amp;#34;:y is int}): return x, y range(5) |&amp;gt; last_two |&amp;gt; print {&amp;#34;x&amp;#34;:1, &amp;#34;y&amp;#34;:2} |&amp;gt; xydict_to_xytuple |&amp;gt; print (3, 4) (1, 2) x = range(100) square = (-&amp;gt; _*_)</description></item><item><title>Containerised Streaming Data Generation using State-Space Models</title><link>/containerised-streaming-data-generation-using-state-space-models.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/containerised-streaming-data-generation-using-state-space-models.html</guid><description>To prototype and test almost any application some type of input data is needed. Getting the right data can be difficult for several reasons, including strict licenses, a considerable amount of data engineering to shape the data to our requirements and the setup of dedicated data producers. Additionally, in modern applications, we are often interested in realtime/streaming and distributed processing of data with platforms such as Apache Kafka and Apache Spark and deployment in a cloud environment like OpenShift1 with tools such as oshinko.</description></item><item><title>Containers</title><link>/containers.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/containers.html</guid><description>Docker is a containerization and manager tool. Docker is a kind of isolated space where an application runs by using system resources. An alternative to Docker is Podman.
TipsExtract image locallyTo extract a container&amp;rsquo;s image locally (e.g. using Docker) the following can be used:
docker export $CONTAINER_NAME &amp;gt; output.tar Alternatively, and using the $IMAGE_ID we can do:
docker save $IMAGE_ID$ &amp;gt; output.tar</description></item><item><title>Cookiecutter data science</title><link>/cookiecutter-data-science.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/cookiecutter-data-science.html</guid><description>Main documentation is available here.
SetupRequirementsFor the purpose of these instructions we will assume the following are installed:
Python 3.9.0 virtualenv A new venv can be created with virtualenv env1 and activated with source venv/bin/activate. Once the environment is active we can install the cookiecutter package using pip install cookiecutter.
The create of the cookiecutter project can be done with
$ cookiecutter https://github.com/drivendata/cookiecutter-data-science For the remainder of this text we will call the of the project you&amp;rsquo;ve just created as $PROJ.</description></item><item><title>Correlation matrix</title><link>/correlation-matrix.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/correlation-matrix.html</guid><description>SimilarityLet&amp;rsquo;s create two datasets, $\mu_1$ and $\mu_2$ such that
$$ \mu_i = {x_1,\dots,x_n} \sim {\mathcal{U}_1(-1,1),\dots,\mathcal{U}_n(-1,1)} $$
We will use $N=100$ observations for a vector sized $n=10$.
import numpy as np import pandas as pd import scipy.stats as stats from scipy.spatial.distance import squareform n = 10 N = 100 np.random.seed(0) mu_1 = np.random.normal(loc=0, scale=1, size=(N, n)) mu_2 = np.random.normal(loc=0, scale=1, size=(N, n)) We now add some noise, $\epsilon=0.6$, to $\mu_2$ such that</description></item><item><title>Counterfactual Fairness</title><link>/counterfactual-fairness.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/counterfactual-fairness.html</guid><description>Building counterfactually fair modelsDataTo evaluate counterfactual fairness we will be using the &amp;ldquo;law school&amp;rdquo; dataset1.
The Law School Admission Council conducted a survey across 163 law schools in the United States. It contains information on 21,790 law students such as their entrance exam scores (LSAT), their grade-point average (GPA) collected prior to law school, and their first year average grade (FYA). Given this data, a school may wish to predict if an applicant will have a high FYA.</description></item><item><title>Counterfactual Fairness in Java</title><link>/counterfactual-fairness-in-java.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/counterfactual-fairness-in-java.html</guid><description>Here we will look at how to build a counterfactually fair model, as detailed in Counterfactual Fairness, specifically the &amp;ldquo;Fair Add&amp;rdquo; model.
This implementation will rely mostly on Apache Commons Math1 linear regression implementations, namely the Ordinary Least Squares (OLS) regression2. We start then by adding the relevant Maven dependencies:
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.commons&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;commons-math3&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.6.1&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Data will be passed as a RealMatrix3. This matrix will have dimensions $N\times f$, where $N$ is the number of observations and $f$ is the number of features.</description></item><item><title>Counterfactuals</title><link>/counterfactuals.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/counterfactuals.html</guid><description>A special type of Explainability.
DesiderataAccording to Verma et al 1 the counterfactual desiderata is:
Validity Actionability Sparsity Data manifold closeness Causality Amortised inference ValidityWe assume that a counterfactual is valid if it solves the optimisation as states in Wachter et al2. If we defined the loss function as
$$ L(x,x^{\prime},y^{\prime},\lambda)=\lambda\times(\hat{f}(x^{\prime})‚àíy^{\prime})^2+d(x,x^{\prime}), $$
we can define the counterfactual as
$$ \arg \underset{x^{\prime}}{\min}\underset{\lambda}{\max} \lambda\times(\hat{f}(x^{\prime})‚àíy^{\prime})^2+d(x,x^{\prime}) $$
where:
$x \in \mathcal{X}$ is the original data point $x^{\prime} \in \mathcal{X}$ is the counterfactual $y^{\prime} \in \mathcal{Y}$ is the desired label $d$ is a distance metric to measure the distance between $x$ and $x^{\prime}$.</description></item><item><title>Counterfactuals with Constraint Solvers</title><link>/counterfactuals-with-constraint-solvers.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/counterfactuals-with-constraint-solvers.html</guid><description>ScoringAn implementation on how to calculate counterfactuals with Constraint Solvers (namely OptaPlanner) is available here.
This implementation satisfies several criteria of the counterfactuals.
The penalisation score is represented with a BendableBigDecimalScore 1, having three &amp;ldquo;hard&amp;rdquo; levels and two &amp;ldquo;soft&amp;rdquo; levels.
The first hard level component, 1, penalises the score according to the distance between the prediction, $y^{\prime}$ for the currently proposed solution, $x^{\prime}$ and the original prediction $y$, that is this our $(\hat{f}(x^{\prime})-y^{\prime})^2$.</description></item><item><title>Deno</title><link>/deno.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/deno.html</guid><description>Deno1 is a Typescript and Javascript runtime.
InstallationFedoraTo install Deno on Fedora, first download the installation file:
curl -fsSL https://deno.land/x/install/install.sh | sh And then add the following to your shell&amp;rsquo;s profile (e.g. ~/.bashrc):
export DENO_INSTALL=&amp;#34;/home/$USER/.deno&amp;#34; export PATH=&amp;#34;$DENO_INSTALL/bin:$PATH&amp;#34; Topis Deno types https://deno.land/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Deno types</title><link>/deno-types.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/deno-types.html</guid><description>Union typesfunction add(a: any, b: any) { if (typeof a === &amp;#39;number&amp;#39; &amp;amp;&amp;amp; typeof b === &amp;#39;number&amp;#39;) { return a + b; } if (typeof a === &amp;#39;string&amp;#39; &amp;amp;&amp;amp; typeof b === &amp;#39;string&amp;#39;) { return a.concat(b); } throw new Error(&amp;#39;Parameters must be numbers or strings&amp;#39;); } return add(true, false); function add(a: number | string, b: number | string) { if (typeof a === &amp;#39;number&amp;#39; &amp;amp;&amp;amp; typeof b === &amp;#39;number&amp;#39;) { return a + b; } if (typeof a === &amp;#39;string&amp;#39; &amp;amp;&amp;amp; typeof b === &amp;#39;string&amp;#39;) { return a.</description></item><item><title>Digital Garden</title><link>/digital-garden.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/digital-garden.html</guid><description>Digital gardens are places where information grows. It is a collection of notes and ideas that are organized in a way that allows for exploration and discovery. It is meant to be a living, growing repository of knowledge and ideas, rather than a static document.
ChallengesA digital garden presents a few challenges.
Chronological is the wrong metaphor, but how to capture time and sequence?. A digital garden can contain a large amount of information, and it can be difficult to decide how to organize and structure it in a way that is intuitive and easy for others to navigate.</description></item><item><title>Distance metrics</title><link>/distance-metrics.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/distance-metrics.html</guid><description>L-p metricsManhattan distance (L1)Given two vectors $p$ and $q$, such that
$$ \begin{aligned} p &amp;amp;= \left(p_1, p_2, \dots,p_n\right) \ q &amp;amp;= \left(q_1, q_2, \dots,q_n\right) \end{aligned} $$
we define the Manhattan distance as:
$$ d_1(p, q) = |p - q|1 = \sum{i=1}^n |p_i-q_i| $$
Euclidean distance (L2)In general, for points given by Cartesian coordinates in $n$-dimensional Euclidean space, the distance is
$$ d(p,q)=\sqrt {(p_{1}-q_{1})^{2}+(p_{2}-q_{2})^{2}+\dots +(p_{i}-q_{i})^{2}+\dots +(p_{n}-q_{n})^{2}} $$
Cluster distancesWithin-cluster sum of squares (WCSS)Given a set of observations ($x_1, x_2,\dots,x_n$), where each observation is a $d$-dimensional real vector, $k$-means clustering aims to partition the $n$ observations into $k$ ($\leq n$) sets $S=\lbrace S_1, S_2, \dots, S_k\rbrace$ so as to minimize the within-cluster sum of squares (WCSS) (i.</description></item><item><title>DLIME</title><link>/dlime.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/dlime.html</guid><description>Architecture Algorithm Input: Dataset $\mathcal{D}_{train}$, Instance $x$, lenght of explanation $\mathcal{K}$ Initialise $\mathcal{Y} \leftarrow {}$ Initialise cluster for $i$ /in/ $1,\dots,N$ do $C_i \leftarrow {i}$ end Initialise clusters to merge $\mathcal{S} \leftarrow$ for $i$ /in/ $1\dots N$ while /no more clusters are available for merging/ do Pick two most similar cluster with minimum distance $d$: $(j,k) \leftarrow \arg\min_{d(j,k)} \in \mathcal{S}$ Create new cluster $C_l \leftarrow C_j \bigcup C_k$ Mark $j$ and $k$ unavailable to merge if $C_l \neq i$ in $1\dots N$ then Mark $l$ as available, $\mathcal{S} \leftarrow \mathcal{S} \bigcup {l}$ end foreach $i \in \mathcal{S}$ do Update similarity matrix by computing distance $d(i, l)$ end end while $i$ /in/ $1,\dots,n$ do $d(\mathbf{x}i, \mathbf{x})=\sqrt{(x{i1}-x_1)^2+\dots+(x_{im}-x_m)^2}$ end $ind \leftarrow$ Find indices for the $k$ smallest distance $d(\mathbf{x}_i, \mathbf{x})$ $\hat{y} \leftarrow$ Get majority label for $x \in ind$ $n^s \leftarrow$ Filter $\mathcal{D}_{train}$ based on $\hat{y}$ foreach $i$ /in/ $1, \dots, n$ do $\mathcal{Y} \leftarrow $ Pairwise distance of each instance in cluster $n^s$ with the original instance $x$ end $\omega \leftarrow$ LinearRegression$(n^s, \mathcal{Y}, \mathcal{K})$ return $\omega$</description></item><item><title>DOOM Emacs</title><link>/doom-emacs.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/doom-emacs.html</guid><description>Configuration is at the same time the most fun and biggest challenge of any Emacs installation. I think it&amp;rsquo;s a good time to recall Anthony Bourdain‚Äôs thoughts about mise en place.
Mise-en-place is the religion of all good line cooks. Do not mess with a line cook‚Äôs ‚Äòmeez‚Äô ‚Äî meaning his setup, his carefully arranged supplies of sea salt, rough-cracked pepper, softened butter, cooking oil, wine, backups, and so on. As a cook, your station, and its condition, its state of readiness, is an extension of your nervous system‚Ä¶ The universe is in order when your station is set up the way you like it: you know where to find everything with your eyes closed, everything you need during the course of the shift is at the ready at arm‚Äôs reach, your defenses are deployed.</description></item><item><title>Drools</title><link>/drools.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/drools.html</guid><description>A page on Drools.</description></item><item><title>Dunn index</title><link>/dunn-index.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/dunn-index.html</guid><description>There are several ways to measure the robustness of a clustering algorithm. Three commonly used metrics are the Dunn index, Davis-Bouldin index, Silhoutte index and Calinski-Harabasz index.
But before we start, let&amp;rsquo;s introduce some concepts.
We are interested in clustering algorithms for a dataset $\mathcal{D}$ with $N$ elements in a $n$-dimensional real space, that is:
$$ \mathcal{D} = {x_1, x_2, \ldots, x_N} \in \mathbb{R}^p $$
The clustering algorithm will create a set $C$ of $K$ distinct disjoint groups from $\mathcal{D}$ $C={c_1, c_2, \ldots, c_k}$, such that:</description></item><item><title>Elisp</title><link>/elisp.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/elisp.html</guid><description>Elisp is the programming language used to program and configure Emacs.
Some Elisp topics:
Elisp snippets</description></item><item><title>Elisp snippets</title><link>/elisp-snippets.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/elisp-snippets.html</guid><description>SnippetsExecute command in shell buffercomint-send-string is the function we&amp;rsquo;re looking for.1
It takes a PROCESS and a STRING. You can get the process from the shell buffer, and conveniently the shell function returns the buffer, so you can streamline it all into something like:
(defun my-server () &amp;#34;SSH to my.server.com in `shell&amp;#39; buffer.&amp;#34; (interactive) (comint-send-string (get-buffer-process (shell)) &amp;#34;ssh my.server.com\n&amp;#34;)) Where the (shell) call will take care of creating the shell buffer and/or process if necessary.</description></item><item><title>Emacs</title><link>/emacs.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/emacs.html</guid><description>This page is a collection of Emacs related notes. The From Scratch to Emacs, The Adventurous Configurator&amp;rsquo;s Handbook page contains a step-by-step guide to configure Emacs from scratch.
Notes on EmacsMy current flavour/distribution of Emacs is DOOM Emacs spacemacs1 DOOM Emacs2. Yes, DOOM Emacs is my preferred configuration framework at the moment. I have used Spacemacs for a long time, but the performance increase by switching to DOOM Emacs is simply to great to be ignored.</description></item><item><title>Emacs cookbook</title><link>/emacs-cookbook.html</link><pubDate>Mon, 05 Jun 2023 21:44:06 +0100</pubDate><guid>/emacs-cookbook.html</guid><description>PackagesLoad local packagesTo load an Emacs package locally, you&amp;rsquo;ll need to do a few things. Here&amp;rsquo;s a step-by-step guide:
Install the package manually: First, you&amp;rsquo;ll need to have the package files somewhere on your system. You may download it from a source or create it yourself. Let&amp;rsquo;s say you have a package named mypackage in a directory at ~/emacs/mypackage.
Add the package directory to your load path: Emacs uses a variable called load-path to determine where to look for packages to load.</description></item><item><title>Emacs Quarkus</title><link>/emacs-quarkus.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/emacs-quarkus.html</guid><description>An Emacs package for Quarkus.</description></item><item><title>Error metrics</title><link>/error-metrics.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/error-metrics.html</guid><description> Root Mean Squared Error R-squared</description></item><item><title>Explainability</title><link>/explainability.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/explainability.html</guid><description>Topics Counterfactuals Counterfactuals with Constraint Solvers LIME and the deterministic version, DLIME Resources TrustyAI Explainability Toolkit1 pre-print, https://arxiv.org/abs/2104.12717 A nice presentation on AI/ML explainability: https://explainml-tutorial.github.io/neurips20 Software omnixai Literature Kakogeorgiou, Ioannis, and Konstantinos Karantzalos. &amp;ldquo;Evaluating Explainable Artificial Intelligence Methods for Multi-label Deep Learning Classification Tasks in Remote Sensing.&amp;rdquo; arXiv preprint arXiv:2104.01375 (2021). Geada, Rob, Tommaso Teofili, Rui Vieira, Rebecca Whitworth and Daniele Zonca. ‚ÄúTrustyAI Explainability Toolkit.‚Äù (2021).&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Extending JUnit</title><link>/extending-junit.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/extending-junit.html</guid><description>Summary</description></item><item><title>Fairness in Machine Learning</title><link>/fairness-in-machine-learning.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/fairness-in-machine-learning.html</guid><description>Machine Learning fairness is directly related to almost all fields where Machine Learning can be applied:
Autonomous machines Job application workflow Predictive models for the justice system Online shopping recommendation systems etc. Many of the causes in ML unfairness or bias can be tracked to the original training data. Some common causes include:
Skewed observations Tainted observations Limited features Sample size disparity Proxies Some algortihms discussed in these pages:
Counterfactual Fairness (also how to create counterfactually fair models in Java) Group fairnessGroup fairness metrics are measures that assess the fairness of a decision-making process or outcome for different groups within a population.</description></item><item><title>Feature scaling</title><link>/feature-scaling.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/feature-scaling.html</guid><description>TechniquesThe most common tecnhiques for feature scaling are normalisation and standardisation. For the examples, we will use the reference dataframe
import pandas as pd import numpy as np import matplotlib.pyplot as plt df = pd.DataFrame({&amp;#39;x&amp;#39;: np.random.rand(100)*10.0, &amp;#39;y&amp;#39;: np.random.rand(100)*2.0}) print(df) x y 0 7.338272 0.963962 1 9.282307 0.799143 2 2.505291 0.664340 3 3.212283 0.137100 4 4.370920 0.383998 .. ... ... 95 1.454787 0.773893 96 3.847065 1.478079 97 4.198221 0.308595 98 9.986268 0.</description></item><item><title>Fedora</title><link>/fedora.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/fedora.html</guid><description>The Fedora1 OS A Linux distribution UpgradingTo upgrade a Fedora distribution (to, say, version 36), run:
$ sudo dnf upgrade --refresh $ sudo dnf system-upgrade download --releasever=36 After the download of new packages is finished, run:
sudo dnf system-upgrade reboot Build toolsRun
sudo dnf install @development-tools https://docs.fedoraproject.org/en-US/project/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Flask</title><link>/flask.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/flask.html</guid><description>A page on Flask things.</description></item><item><title>Food</title><link>/food.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/food.html</guid><description>Eternal questionsWhy does Pepperoni curl in Pizza? As the pizza bakes, the edge of the pepperoni curls upwards, forming a distinct lip. Once exposed like this, the lip cooks faster than the base, which is insulated by the cheese and crust, and thus crisps and renders its fat faster.</description></item><item><title>From Scratch to Emacs, The Adventurous Configurator's Handbook</title><link>/from-scratch-to-emacs-the-adventurous-configurators-handbook.html</link><pubDate>Mon, 05 Jun 2023 21:44:06 +0100</pubDate><guid>/from-scratch-to-emacs-the-adventurous-configurators-handbook.html</guid><description>Emacs, the world-class, extensible, customisable, free/libre text editor, has stood the test of time and continues to be a powerful tool for both developers and writers alike. Its reputation for complexity belies its potential: it is an undiscovered country, a treasure chest filled with gold, jewels, and priceless artifacts. Embarking on a journey with Emacs is much like setting sail on the high seas of productivity, and in this guide, we aim to help you navigate these waters with ease.</description></item><item><title>Gaussian Process Regression</title><link>/gaussian-process-regression.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/gaussian-process-regression.html</guid><description>Example taken from the official Scikit-learn documentation1.
DataWe will start by generating a synthetic dataset. The true generative process is defined as $f(x)=x\sin(x)$.
import numpy as np np.random.seed(42) X = np.linspace(start=0, stop=10, num=1_000).reshape(-1, 1) y = np.squeeze(X * np.sin(X)) We will use this dataset in the next experiment to illustrate how Gaussian Process regression is working.
Example with noise-free targetIn this first example, we will use the true generative process without adding any noise.</description></item><item><title>Gemini</title><link>/gemini.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/gemini.html</guid><description>A recommended graphical Gemini browser is Lagrange or Amfora for a text-based/terminal browser.
SyntaxGemini syntax is quite similar to Markdown
SetupUsing the agate server</description></item><item><title>Git</title><link>/git.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/git.html</guid><description>IntroductionThis is a page containing the topics for Git1.
Git cookbook https://git-scm.com/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Git cookbook</title><link>/git-cookbook.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/git-cookbook.html</guid><description>Useful aliasesThis is a list of useful aliases I&amp;rsquo;ve found on the Internet1. To use them, simply add them to the [alias] section of ~/.gitconfig.
Sync with main branchThis command updates the local branch with the origin&amp;rsquo;s main.
[alias] synced = &amp;#34;!git pull origin $(git mainbranch) --rebase&amp;#34; TreeTruncate historyTo truncate Git history, that is discard all commits before a specific one, you can do the following. Assume I have a commit with a certain hash, say abc123, and want to drop all commits before this one.</description></item><item><title>GitHub</title><link>/github.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/github.html</guid><description>Contributions</description></item><item><title>GitHub actions</title><link>/github-actions.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/github-actions.html</guid><description>Notes on GitHub actions.</description></item><item><title>Go</title><link>/go.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/go.html</guid><description>Some notes regarding the Go language. Some topics have graduated to their own page:
Go cookbook Go resource bundling Go filesystem operations SetupFirst things first. How to install the Go language in different OSes.
FedoraYou can either use dnf directly and simply run
$ sudo dnf install golang-bin This might not install the latest and greatest. If you want to use the most recent version, download it directly from https://golang.org/doc/install#install. If applicable, delete any previous /usr/local/go directory with</description></item><item><title>Go filesystem operations</title><link>/go-filesystem-operations.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/go-filesystem-operations.html</guid><description>Notes on Go filesystem operations.
Copying filesGo does not have an utility method to copy files. We have to rely on writing our own implementation using the reading and writing functionality in other packages. As an example:
package main import ( &amp;#34;io&amp;#34; &amp;#34;log&amp;#34; &amp;#34;os&amp;#34; ) func main() { from, err := os.Open(&amp;#34;./foo.txt&amp;#34;) if err != nil { log.Fatal(err) } defer from.Close() to, err := os.OpenFile(&amp;#34;./bar.txt&amp;#34;, os.O_RDWR|os.O_CREATE, 0666) if err != nil { log.</description></item><item><title>Go resource bundling</title><link>/go-resource-bundling.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/go-resource-bundling.html</guid><description>Notes on the installation and usage of pkger.
Installation done with
go get github.com/markbates/pkger/cmd/pkger pkger works by bundling the resources with a code-generated pkg.go. The configuration of assets to be bundled is done by reflection at compile time and not direct configuration. This is done by replacing standard Go file operations with pkger proxy ones, such as:
type Pkger interface { Parse(p string) (Path, error) Current() (here.Info, error) Info(p string) (here.</description></item><item><title>Gower distance</title><link>/gower-distance.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/gower-distance.html</guid><description>For features $x_i={x_{i1},\dots,x_{ip}}$ and $x_j={x_{j1},\dots,x_{jp}}$, the Gower similarity matrix 1 can be defined as
$$ S_{\text{Gower}}(x_i, x_j) = \frac{\sum_{k=1}^p s_{ijk}\delta_{ijk}}{\sum_{k=1}^p \delta_{ijk}}. $$
For each feature $k=1,\dots,p$ a score $s_{ijk}$ is calculated. A quantity $\delta_{ijk}$ is also calculated having possible values ${0,1}$ depending on whether the variables $x_i$ and $x_j$ can be compared or not (/e.g./ if they have different types).
A special case2 for when no missing values exist can be formulated as the mean of the Gower similarity scores, that is:</description></item><item><title>GPG</title><link>/gpg.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/gpg.html</guid><description>InstallationmacOSYou can install GPG on macOS using:
$ brew install gpg WorkflowGetting existing keyTo get an existing key id use:
gpg --list-secret-keys --keyid-format LONG The key id will be available at
gpg --list-secret-keys --keyid-format LONG /home/foo/.gnupg/pubring.gpg ------------------------------ sec rsa2048/7FFFC09ACAC05FD0 2017-06-02 [SC] [expires: 2019-06-02] 5538B0F643277336BA7F0E457FFFC09ACAC05FD0 uid [ultimate] foo &amp;lt;foo@[example.com](http://realaddress.com)&amp;gt; ssb rsa2048/95E8A289DFE77A84 2017-06-02 [E] [expires: 2019-06-02] The key id we want, in this case is 7FFFC09ACAC05FD0.
To retrieve the public key use</description></item><item><title>GraalVM</title><link>/graalvm.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/graalvm.html</guid><description>Missing headersOn macOS, if you find missing headers when installing polyglot packages, try:
$ export CPATH=`xcrun --show-sdk-path`/usr/include</description></item><item><title>Grad-CAM</title><link>/grad-cam.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/grad-cam.html</guid><description>Page on Grad-CAM.</description></item><item><title>Gradient-free optimisation</title><link>/gradient-free-optimisation.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/gradient-free-optimisation.html</guid><description> Hill-climbing optimisation</description></item><item><title>gulp</title><link>/gulp.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/gulp.html</guid><description>I have been working in a new library called gulp which you can find on https://github.com/ruivieira/gulp.
On the project&amp;rsquo;s page there are some usage examples but I will try to summarise the main points here.
The purpose of this library is to facilitate the parallel development of R and Java code, using rJava as the bridge. Creating bindings in rJava is quite simple, the tricky part of the process (in my opinion) being the maintenance of the bindings (usually done by hand) when refactoring your code.</description></item><item><title>Hill-climbing optimisation</title><link>/hill-climbing-optimisation.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/hill-climbing-optimisation.html</guid><description>Global maximumLet&amp;rsquo;s try it with the function
$$ f(x,y) = e^{-\left(x^2+y^2\right)} $$
import numpy as np import matplotlib.pyplot as plt from plotutils import * x = np.linspace(-2.0, 2.0, 1000) y = np.linspace(-2.0, 2.0, 1000) X, Y = np.meshgrid(x, y) Z = np.exp(-(X ** 2 + Y ** 2)) fig, ax = plt.subplots(1, 1) cp = ax.contourf(X, Y, Z, cmap=cmaps[1]) ax.set_title(&amp;#34;f(x,y)&amp;#34;) ax.set_xlabel(&amp;#34;x&amp;#34;) ax.set_ylabel(&amp;#34;y&amp;#34;) plt.show() from gradient_free_optimizers import HillClimbingOptimizer search_space = { &amp;#34;x&amp;#34;: x, &amp;#34;y&amp;#34;: y, } opt = HillClimbingOptimizer(search_space) def f(pos): x = pos[&amp;#34;x&amp;#34;] y = pos[&amp;#34;y&amp;#34;] z = np.</description></item><item><title>Hot Sauces</title><link>/hot-sauces.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/hot-sauces.html</guid><description>This is a collection of the hot sauces I&amp;rsquo;ve tried.
Piri piriNando&amp;rsquo;s XX Hot</description></item><item><title>HTML</title><link>/html.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/html.html</guid><description>HTML TricksMetersA meter element is availble natively for HTML.
&amp;lt;label for=&amp;#34;value1&amp;#34;&amp;gt;Low&amp;lt;/label&amp;gt; &amp;lt;meter id=&amp;#34;value1&amp;#34; min=&amp;#34;0&amp;#34; max=&amp;#34;100&amp;#34; low=&amp;#34;30&amp;#34; high=&amp;#34;75&amp;#34; optimum=&amp;#34;80&amp;#34; value=&amp;#34;25&amp;#34;&amp;gt;&amp;lt;/meter&amp;gt; &amp;lt;label for=&amp;#34;value2&amp;#34;&amp;gt;Medium&amp;lt;/label&amp;gt; &amp;lt;meter id=&amp;#34;value2&amp;#34; min=&amp;#34;0&amp;#34; max=&amp;#34;100&amp;#34; low=&amp;#34;30&amp;#34; high=&amp;#34;75&amp;#34; optimum=&amp;#34;80&amp;#34; value=&amp;#34;50&amp;#34;&amp;gt;&amp;lt;/meter&amp;gt; &amp;lt;label for=&amp;#34;value3&amp;#34;&amp;gt;High&amp;lt;/label&amp;gt; &amp;lt;meter id=&amp;#34;value3&amp;#34; min=&amp;#34;0&amp;#34; max=&amp;#34;100&amp;#34; low=&amp;#34;30&amp;#34; high=&amp;#34;75&amp;#34; optimum=&amp;#34;80&amp;#34; value=&amp;#34;80&amp;#34;&amp;gt;&amp;lt;/meter&amp;gt; Low Medium High Ordered list startChange the starting point of an ordered list.
&amp;lt;ol start=&amp;#34;11&amp;#34;&amp;gt; &amp;lt;li&amp;gt;Eleven&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Twelve&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Thirteen&amp;lt;/li&amp;gt; &amp;lt;li&amp;gt;Fourteen&amp;lt;/li&amp;gt; &amp;lt;/ol&amp;gt; Eleven Twelve Thirteen Fourteen HTML Native Search&amp;lt;div class=&amp;#34;wrapper&amp;#34;&amp;gt; &amp;lt;h1&amp;gt;HTML native search&amp;lt;/h1&amp;gt; &amp;lt;input list=&amp;#34;items&amp;#34;&amp;gt; &amp;lt;datalist id=&amp;#34;items&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;Rui&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;Vieira&amp;#34;&amp;gt; &amp;lt;option value=&amp;#34;ruivieira.</description></item><item><title>Hugo</title><link>/hugo.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/hugo.html</guid><description>TemplatesSpecial pagesBy default, the type for a piece of content is inherited from the the content‚Äôs section. So, the file you create for content at content/posts/my-post.md automatically has a type of posts. However, you may want to keep my-post.md within that section because you want to rely on Hugo‚Äôs default behavior to render the page to yoursite.com/posts/my-post, but you want it to render according to a different layout. In this case, you can specify a type for the content that overrides the default behavior.</description></item><item><title>Introduction to Balanced Box-Decomposition Trees</title><link>/introduction-to-balanced-box-decomposition-trees.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/introduction-to-balanced-box-decomposition-trees.html</guid><description>Stardate 96893.29.
You are the USS Euler&amp;rsquo;s Science Officer at a moment when the computer graphical displays and voice systems went down. You only have enough deuterium for a short travel and need to find the nearest star system. This is not a simple matter of looking at a chart. You have multiple dimensions in which you can travel. In a bid for galactic peace, the Federation mandated that both Emacs and Vim should be installed in all computers.</description></item><item><title>Introduction to Isolation Forests</title><link>/introduction-to-isolation-forests.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/introduction-to-isolation-forests.html</guid><description>Isolation Forests (IFs), presented in Liu1 et. al (2012), are a popular algorithm used for outlier classification. In a very simplified way, the method consists of building an ensemble of Isolation Trees (ITs) for a given data set and observations are deemed anomalies if they have short adjusted average path lengths on the ITs.
ITs, which will be covered shortly, have several properties in common with a fundamental data structure: the Binary Search Tree (BSTs).</description></item><item><title>Java</title><link>/java.html</link><pubDate>Sun, 03 Sep 2023 10:53:23 +0100</pubDate><guid>/java.html</guid><description>SummaryThis page contains links to most Java topics. Java, created by James Gosling, among others.
Tools Java build systems Includes Maven JReleaser JUnit Concepts Java Completable Futures Java consumer Extending JUnit ReferenceGet user home directorySystem.getProperty(&amp;#34;user.home&amp;#34;); List files recursivelytry (Stream&amp;lt;Path&amp;gt; walk = Files.walk(Paths.get(input))) { List&amp;lt;String&amp;gt; result = walk.filter(Files::isRegularFile) .map(x -&amp;gt;x.toString()) .collect(Collectors.toList()); result.forEach(System.out::println); } catch (IOException e) { e.printStackTrace(); } In case we want the file subset with a specific extension, txt we can filter the stream with</description></item><item><title>Java build systems</title><link>/java-build-systems.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/java-build-systems.html</guid><description>SummaryNotes on Java build systems.
Maven</description></item><item><title>Java Completable Futures</title><link>/java-completable-futures.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/java-completable-futures.html</guid><description>Running in parallelimport java.util.concurrent.CompletableFuture; import java.lang.InterruptedException; import java.util.concurrent.ExecutionException; public static void main(String[] args) throws InterruptedException, ExecutionException { CompletableFuture&amp;lt;String&amp;gt; future1 = CompletableFuture.supplyAsync(() -&amp;gt; &amp;#34;Hello&amp;#34;); CompletableFuture&amp;lt;String&amp;gt; future2 = CompletableFuture.supplyAsync(() -&amp;gt; &amp;#34;Beautiful&amp;#34;); CompletableFuture&amp;lt;String&amp;gt; future3 = CompletableFuture.supplyAsync(() -&amp;gt; &amp;#34;World&amp;#34;); CompletableFuture&amp;lt;Void&amp;gt; combinedFuture = CompletableFuture.allOf(future1, future2, future3); CompletableFuture&amp;lt;String&amp;gt; result = combinedFuture.thenApply(v -&amp;gt; future1.join() + future2.join() + future3.join()); System.out.println(result.get()); } Waiting for allLets assume we have a completable future, $f$. This future, in turn, create $N$ additional completable futures, $f_1, f_2, \dots, f_N$.</description></item><item><title>Java consumer</title><link>/java-consumer.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/java-consumer.html</guid><description>IntroductionApplyingIntroduced in Java 8, the Consumer interface aims at providing additional functional programming capabilities for Java.
Consumer defined functions do not return any value and they consist mainly of two methods:
void accept(T t); default Consumer&amp;lt;T&amp;gt; andThen(Consumer&amp;lt;? super T&amp;gt; after); Let&amp;rsquo;s look at an example:
import java.util.ArrayList; import java.util.function.Consumer; public static void main(String[] args) { Consumer&amp;lt;String&amp;gt; say = a -&amp;gt; System.out.println(&amp;#34;Hello, &amp;#34; + a + &amp;#34;!&amp;#34;); say.accept(&amp;#34;World&amp;#34;); } : Hello, World!</description></item><item><title>Java streams</title><link>/java-streams.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/java-streams.html</guid><description>Flat mappingNested mapsimport java.util.Map; import java.util.HashMap; public static void main(String[] args) { final Map&amp;lt;String, Object&amp;gt; client = new HashMap&amp;lt;&amp;gt;(); client.put(&amp;#34;Age&amp;#34;, 43); client.put(&amp;#34;Salary&amp;#34;, 1950); client.put(&amp;#34;Existing payments&amp;#34;, 100); final Map&amp;lt;String, Object&amp;gt; loan = new HashMap&amp;lt;&amp;gt;(); loan.put(&amp;#34;Duration&amp;#34;, 15); loan.put(&amp;#34;Installment&amp;#34;, 100); final Map&amp;lt;String, Object&amp;gt; contextVariables = new HashMap&amp;lt;&amp;gt;(); contextVariables.put(&amp;#34;Client&amp;#34;, client); contextVariables.put(&amp;#34;Loan&amp;#34;, loan); System.out.println(contextVariables); } : {Loan={Installment=100, Duration=15}, Client={Salary=1950, Existing payments=100, Age=43}}</description></item><item><title>JPype</title><link>/jpype.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/jpype.html</guid><description>Notes on the JPype Python library.
ConversionNumpy arrays</description></item><item><title>JUnit</title><link>/junit.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/junit.html</guid><description>Test locationsBy default JUnit will look for test following the glob pattern:
**/Test*.java **/*Test.java **/*Tests.java **/*TestCase.java If you want to add different patterns or locations (as well as exclude them), this can be done via de surefire Maven configuration:
&amp;lt;build&amp;gt; &amp;lt;plugins&amp;gt; &amp;lt;plugin&amp;gt; &amp;lt;groupId&amp;gt;org.apache.maven.plugins&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;maven-surefire-plugin&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;3.0.0-M7&amp;lt;/version&amp;gt; &amp;lt;configuration&amp;gt; &amp;lt;includes&amp;gt; &amp;lt;include&amp;gt;**/*Test.java&amp;lt;/include&amp;gt; &amp;lt;/includes&amp;gt; &amp;lt;excludes&amp;gt; &amp;lt;exclude&amp;gt;**/FooTest.java&amp;lt;/exclude&amp;gt; &amp;lt;exclude&amp;gt;**/NotReallyATest.java&amp;lt;/exclude&amp;gt; &amp;lt;/excludes&amp;gt; &amp;lt;/configuration&amp;gt; &amp;lt;/plugin&amp;gt; &amp;lt;/plugins&amp;gt; &amp;lt;/build&amp;gt;</description></item><item><title>K-means clustering</title><link>/k-means-clustering.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/k-means-clustering.html</guid><description>IntroductionK-means is still one of the fundamental clustering algorithms. It is used in such diverse fields as Natural Language Processing (NLP), social sciences and medical sciences.
The core idea behind K-means is that we want to group data in clusters. Data points will be assigned to a specific cluster depending on it&amp;rsquo;s distance to a cluster&amp;rsquo;s center, usually called the centroid.
It is important to note that typically, the mean distance to a centroid is used to partition the clusters, however, difference distances can be used and different pivot points.</description></item><item><title>k8s operators</title><link>/k8s-operators.html</link><pubDate>Thu, 11 May 2023 23:33:02 +0100</pubDate><guid>/k8s-operators.html</guid><description>OpenShiftInstallingTo install a k8s operator, define the subscription with, for instance opendatahub-operator.yaml:
apiVersion: operators.coreos.com/v1alpha1 kind: Subscription metadata: name: opendatahub-operator namespace: openshift-operators spec: channel: rolling installPlanApproval: Automatic name: opendatahub-operator source: community-operators sourceNamespace: openshift-marketplace and apply it with oc apply -f opendatahub-operator.yaml.</description></item><item><title>Kernel functions</title><link>/kernel-functions.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/kernel-functions.html</guid><description>Radial Basis Function (RBF)Given
$$ K(X_1,X_2)=\sigma^2\exp\left(-\frac{||X_1-X_2||^2}{2\ell^2}\right) $$
$\sigma^2$ is the overall variance (where $\sigma$ is also known as the amplitude) It determines the average distance of your function away from its mean. It can be interpreted as a scale factor. $\ell$ the lengthscale. In general, you won&amp;rsquo;t be able to extrapolate more than $\ell$ units away from your data. import numpy as np from sklearn.gaussian_process.kernels import RBF np.random.seed(42) xlim = (-4, 4) X = np.</description></item><item><title>KinD</title><link>/kind.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/kind.html</guid><description>These are the KinD notes. Kubernetes IN Docker.
InstallationTo install on Linux:
curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.17.0/kind-linux-amd64 chmod +x ./kind sudo mv ./kind /usr/local/bin/kind Storage Create a directory on your laptop that will serve as the Persistent Volume (PV). Create a YAML file for the PV and PVC, specifying the path to the directory on your laptop as the source of the PV. Apply the YAML file to your KIND cluster to create the PV and PVC.</description></item><item><title>KNative</title><link>/knative.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/knative.html</guid><description>IntroductionSome requirements to run KNative:
Minikube kubectl Architecture</description></item><item><title>Kompose</title><link>/Kompose.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/Kompose.html</guid><description/></item><item><title>Kourier</title><link>/kourier.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/kourier.html</guid><description>IntroductionKourier page.</description></item><item><title>Kubernetes</title><link>/kubernetes.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/kubernetes.html</guid><description>Kubernetes (also known as K8s) is an open-source container orchestration system for automating the deployment, scaling, and management of containerised applications. It was originally developed by Google and is now maintained by the Cloud Native Computing Foundation (CNCF)1.
Architecture Master node: This is the central control plane of the Kubernetes cluster, responsible for managing the overall state of the system. The master node runs a number of components, including the API server, scheduler, and controller manager.</description></item><item><title>Kustomize</title><link>/kustomize.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/kustomize.html</guid><description>Notes on Kustomize1.
Installationkubectl is a Kustomize requirement. To install the binary version of Kustomize use
$ curl -s &amp;#34;https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh&amp;#34; | bash ConfigMapsConfigMap GeneratorsCreating a ConfigMap from a kustomization.yaml:
configMapGenerator: - name: some-cmap files: - ./blah.yaml options: disableNameSuffixHash: true This will create a ConfigMap named some-cmap from the file ./blah.yaml. It will also disable the hash suffix on the name of the ConfigMap.
https://kustomize.io/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Langton's ant</title><link>/langtons-ant.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/langtons-ant.html</guid><description>Last week, at the North East Functional Programming meet up, we were given a code Kata consisting of the Langton&amp;rsquo;s ant algorithm.
I&amp;rsquo;ve had a go at Scala but decided later on to put a live version in this blog.
I considered several implementation options, such as scala.js and Elm, but in the end decided to implement it in plain Javascript.
Add ant</description></item><item><title>LaTeX</title><link>/latex.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/latex.html</guid><description>Notes on LaTeX.
Images side-by-sideUse the subfig package.
\documentclass[10pt,a4paper]{article} \usepackage[demo]{graphicx} \usepackage{subfig} \begin{document} \begin{figure}% \centering \subfloat[\centering label 1]{{\includegraphics[width=5cm]{img1} }}% \qquad \subfloat[\centering label 2]{{\includegraphics[width=5cm]{img2} }}% \caption{2 Figures side by side}% \label{fig:example}% \end{figure} \end{document}</description></item><item><title>Linux admin</title><link>/linux-admin.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/linux-admin.html</guid><description>Notes on Linux admin.</description></item><item><title>Machine learning</title><link>/machine-learning.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/machine-learning.html</guid><description>Notes on machine learning.
Data Synthetic Data Generation Using Synthetic data with SDV and Gaussian copulas, Synthetic data with SDV and CTGAN and Synthetic data with SDV and CopulaGAN. Explainabilty Explainability Drift Introduction to Concept Drift in Machine Learning Model drift Data drift Time-series Time-series analysis Streaming anomaly detection Clustering K-means clustering Fairness Fairness in Machine Learning Model fairness MetricsError metrics Distance metrics Performance Model performance metrics Transformations Feature scaling Optimisation Gradient descent Stochastic Gradient Descent Stochastic Gradient descent with momentum Mini-Batch Gradient Descent Adagrad RMSProp AdaDelta Adam Gradient-free optimisation RNN LSTM Statistics Statistics</description></item><item><title>Machines</title><link>/machines.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/machines.html</guid><description>My machine collection.
MacBook Air A 2015 MacBook Air1 with a 1.6GHz dual-core Intel Core i5, 13-inch display, 512Gb SSD and 8Gb RAM.
This could well be my all-time favourite machine. Still going strong and with an almost faultless form factor. Light and I really enjoy the keyboard feel. My only complaint is not being a Retina display and the fans can get a bit loud when under heavy workloads.</description></item><item><title>Maven</title><link>/maven.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/maven.html</guid><description>SummaryNotes on the Maven build system.
ModesDaemonThis build mode relies on the Maven daemon, itself inspired by the Gradle daemon:
The Maven Daemon process does not reload classes unless they are changed.
The daemon is called with mvnd instead of mvn, for instance
$ mvnd clean install The daemon uses multiple threads by default, with $N_{cores}-1$.
Artifacts√úber JARsThere are many ways to build √ºber JARs, but we will talk about two, maven-assembly-plugin and maven-shade-plugin.</description></item><item><title>MCMC notifications</title><link>/mcmc-notifications.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/mcmc-notifications.html</guid><description>It is said that patience is a virtue but the truth is that no one likes waiting (especially waiting around: this interesting article explores why people prefer walking 8 minutes to the airport‚Äôs baggage claim and having the bags ready rather than waiting the same amount of time entirely in the claim area).
Anyone performing computationally heavy work, such as Monte Carlo methods, will know that these are usually computationally expensive algorithms which, even in modern hardware, can result in waiting times in the magnitude of hours, days and even weeks.</description></item><item><title>MCMC performance on substrate VM</title><link>/mcmc-performance-on-substrate-vm.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/mcmc-performance-on-substrate-vm.html</guid><description>Recently I&amp;rsquo;ve been following (but not very closely, I admit) the development of the GraalVM project. The project has many interesting goals (such as Project Metropolis, increased JIT performance and others).
However, having dabbled with projects such as Scala native and Kotlin native, one of the aspects of GraalVM that caught my attention was the SubstrateVM, which allegedly allows for a simple, straight-forward compilation of any Java bytecode into a native binary.</description></item><item><title>Minikube</title><link>/minikube.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/minikube.html</guid><description>IntroductionPage on Minikube1.
InstallationFedoraTo install Minikube on Fedora use:
$ curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-latest.x86_64.rpm $ sudo rpm -Uvh minikube-latest.x86_64.rpm SetupMost of the configuration settings can be set using the config subcommand.
Kubernetes versionTo stet the [Kubernetes cluster version (e.g 1.19) there are two options. Either permanently set it as a config option
$ minikube config set kubernetes-version v1.19.0 Or specify it as a parameter when starting, using
$ minikube start --kubernetes-version=v1.19.0 MemorySet the available amount of memory.</description></item><item><title>Model fairness</title><link>/model-fairness.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/model-fairness.html</guid><description>Unfairness detection Fairness metricsGroup fairnessModel fairness metrics are described in the fairness page.</description></item><item><title>Model performance metrics</title><link>/model-performance-metrics.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/model-performance-metrics.html</guid><description>Difference in Positive Proportions in Predicted Labels (DPPL)DPPL (Difference in Positive Proportions in Predicted Labels) is a metric used to evaluate the performance of machine learning models in imbalanced datasets. It measures the difference in the proportion of positive predictions made by the model between the minority class and the majority class.
A low value of DPPL indicates that the model is able to make similar positive predictions for instances of the minority class and instances of the majority class, which is desirable in imbalanced datasets where it is important to ensure that the minority class is not overlooked.</description></item><item><title>Model serving</title><link>/model-serving.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/model-serving.html</guid><description>Page on model serving.
Seldon Serving models with Seldon ModelMesh ModelMesh</description></item><item><title>ModelMesh</title><link>/modelmesh.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/modelmesh.html</guid><description>This is originally at https://github.com/kserve/modelmesh-serving/blob/main/docs/quickstart.md
Getting startedTo quickly get started using ModelMesh Serving, here is a brief guide.
Prerequisites A Kubernetes cluster v 1.16+1 with cluster administrative privileges kubectl2 and kustomize3 (v3.2.0+) At least 4 vCPU and 8 GB memory4. For more details, please see the deployed components section. 1. Install ModelMesh ServingGet the latest releaseRELEASE=release-0.10 git clone -b $RELEASE --depth 1 --single-branch https://github.com/kserve/modelmesh-serving.git cd modelmesh-serving Run install scriptkubectl create namespace modelmesh-serving .</description></item><item><title>Monotonic Cubic Spline interpolation (with some Rust)</title><link>/monotonic-cubic-spline-interpolation-with-some-rust.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/monotonic-cubic-spline-interpolation-with-some-rust.html</guid><description>Monotonic Cubic Spline interpolation (MCSI) is a popular and useful method which fits a smooth, continuous function through discrete data. MCSI has several applications in the field of computer vision and trajectory fitting. MCSI further guarantees monotonicity of the smoothed approximation, something which a cubic spline approximation alone cannot. In this post I&amp;rsquo;ll show how to implement the method developed by F. N. Fritsch and R. E. Carlson1 in the Rust2 programming language.</description></item><item><title>Navi</title><link>/navi.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/navi.html</guid><description>To instal navi1 on Linux you can use
$ bash &amp;lt;(curl -sL https://raw.githubusercontent.com/denisidoro/navi/master/scripts/install) When installing navi on Ubuntu 20 you will get the error
invalid preview window layout: up:2:nohidden invalid preview window layout: up:2:nohidden invalid preview window layout: up:2:nohidden This is very likely due to the fact that the fzf2 version is too old (perhaps 0.20).
To upgrade to the latest version of fzf use:
$ git clone --depth 1 https://github.</description></item><item><title>Neovim</title><link>/neovim.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/neovim.html</guid><description>Notes on Neovim.
InstallationFedoraTo install Neovim on Fedora simply run:
sudo dnf install -y neovim python3-neovim vim-plugTo install vim-plug1 run:
sh -c &amp;#39;curl -fLo &amp;#34;${XDG_DATA_HOME:-$HOME/.local/share}&amp;#34;/nvim/site/autoload/plug.vim --create-dirs \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim&amp;#39; The config file if not existing can created at ~/.config/nvim/init.vim.
The syntax is (for instance to add Crystal support):
call plug#begin() Plug &amp;#39;vim-crystal/vim-crystal&amp;#39; call plug#end() https://github.com/junegunn/vim-plug#neovim&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>now</title><link>/now.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/now.html</guid><description>My &amp;ldquo;now&amp;rdquo; page.</description></item><item><title>OOB score in random forests</title><link>/oob-score-in-random-forests.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/oob-score-in-random-forests.html</guid><description>In the Random Forest algorithm, we build a decision tree (DT) based on a certain training dataset. This tree will be split in order to minimise some criteria function.
However, it is not desirable that individual DTs get too large with too many splits, so a common approach is to train each tree with a subset of the training data (sampled with replacement). This will ensure that individual tree maintain a manageable size, while the variance of the tree ensemble is reduced and the overall bias is not altered.</description></item><item><title>OpenShift</title><link>/openshift.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/openshift.html</guid><description>Notes on OpenShift1. To deploy operators on OpenShift see operators.
OpenShift properApp selectionTo get the name of all resources matching a certain label:
$ oc get all --selector app=$APPNAME -o name To delete said resources use:
$ oc delete all --selector app=$APPNAME Image loadinggRPC routesTo enable sending gRPC requests to an OpenShift route, you will need to create a route that exposes the gRPC service and configure the necessary settings:</description></item><item><title>Optimising random forest hyperparameters</title><link>/optimising-random-forest-hyperparamaters.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/optimising-random-forest-hyperparamaters.html</guid><description>Typically the hyper-parameters which will have the most significant impact on the behaviour of a random forest are the following:
he number of decision trees in a random forest
The split criteria
Maximum depth of individual trees
Maximum number of leaf nodes
Random features per split
umber of samples in bootstrap dataset
We will look at each of these hyper-parameters individually with examples of how to select them.
DataTo understand how we can optimise the hyperparameters in a random forest model, we will use scikit-learn&amp;rsquo;s RandomForestClassifier and a subset of Titanic1 dataset.</description></item><item><title>Pandas</title><link>/pandas.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/pandas.html</guid><description>Pandas1 provides high-performance, easy-to-use data structures and data analysis tools for the Python language.
Pandas basics Extending pandas dataframes https://pandas.pydata.org/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Pandas basics</title><link>/pandas-basics.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/pandas-basics.html</guid><description>Creating dataframesLet&amp;rsquo;s start with the basics. How to create a dataframe.
Loading from CSVDataframes can be created from CSV files by using the following method:
import pandas as pd pd.read_csv(&amp;#39;../../data/mpg.csv&amp;#39;) mpg cylinders displacement horsepower weight acceleration model_year origin name 0 18.0 8 307.0 130 3504 12.0 70 1 chevrolet chevelle malibu 1 15.0 8 350.0 165 3693 11.5 70 1 buick skylark 320 2 18.0 8 318.0 150 3436 11.</description></item><item><title>Pikchr</title><link>/pikchr.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/pikchr.html</guid><description>Notes on Pikchr1.
InstallationDownload pikchr~ from the downloads page To create the CLI command, compile using
$ gcc -DPIKCHR_SHELL -o pikchr pikchr.c -lm And add it to your path.
ExamplesA: box &amp;#34;head&amp;#34; fit B: box &amp;#34;tail&amp;#34; fit C: box &amp;#34;something&amp;#34; with .sw at A.nw fit wid dist(A.w, B.e) https://pikchr.org/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Podman</title><link>/podman.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/podman.html</guid><description>A page with notes about Podman. There is also a Podman cheatsheet available.
Common problemsDid not resolve to an aliasIf referencing an image, say postgres:14, the following error shows:
Error: short-name &amp;#34;postgres:14&amp;#34; did not resolve to an alias and no unqualified-search registries are defined in &amp;#34;/etc/containers/registries.conf&amp;#34; It can be the case that you referencing unqualified images1. The previous behaviour (using unqualified image names) can be restated by adding the line below in /etc/containers/registries.</description></item><item><title>Portuguese Christmas recipes</title><link>/portuguese-christmas-recipes.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/portuguese-christmas-recipes.html</guid><description>Last year (2020) we spent Christmas in &amp;ldquo;lockdown&amp;rdquo; and we tried to make ourselves our full traditional Portuguese Christmas recipes from scratch &amp;ndash; while not being in Portugal. Herein lies the first issue: there are many different &amp;ldquo;traditions&amp;rdquo;, but these are the ones that me and my partner are used to.
Traditionally, Christmas celebrations in Portugal start on the night of Christmas eve and carry on during Christmas day. The main meals are then dinner on the 24th December and lunch on the 25th December.</description></item><item><title>Programming</title><link>/programming.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/programming.html</guid><description> [Unit tests](Unit testing)</description></item><item><title>pytest</title><link>/pytest.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/pytest.html</guid><description>Run specific testsRun all tests in a project$ pytest Run tests in a Single DirectoryTo run all the tests from one directory, use the directory as a parameter to pytest:
$ pytest tests/my-directory Run tests in a Single Test File/ModuleTo run a file full of tests, list the file with the relative path as a parameter to pytest:
$ pytest tests/my-directory/test_demo.py Run a Single Test FunctionTo run a single test function, add :: and the test function name:</description></item><item><title>Python</title><link>/python.html</link><pubDate>Sun, 03 Sep 2023 10:53:23 +0100</pubDate><guid>/python.html</guid><description>SummaryMain page for all things Python. Other pages cover specific topics, such as:
Python environments Code style Python collections Python Pweave Pandas Notes on Python grammar of graphics Monkey patching Abstract classes InstallationAnacondaAn option to install Python is to use Anaconda1. Download the appropriate installation file from https://www.anaconda.com/products/individual. And then run the installer with, e.g., sh ./Anaconda3-2021.11-Linux-x86_64.sh. The installation would typically be under $HOME/anaconda3. There is a page dedicated to configuring and using [Anaconda].</description></item><item><title>Python Abstract classes</title><link>/python-abstract-classes.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/python-abstract-classes.html</guid><description>Abstract classes were added to Python with PEP-31191. One of the goals was to add interfaces to reinforce type checking. For instance:
from abc import ABC, abstractmethod class AbstractFoo(ABC): @abstractmethod def calculate_foo(self): pass def foo(self): return self.calculate_foo() Sub-class hooksThe Abstract class implementation in Python has have a way of determinining what is a child of it even if it&amp;rsquo;s not a direct subclass of it. This is done by using sub-class hooks.</description></item><item><title>Python code style</title><link>/python-code-style.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/python-code-style.html</guid><description>General notes on Python&amp;rsquo;s code style and practices.
Linters Pylint1 pycodestyle2 (formerly PEP8) Flake83, meta-package including PyFlakes, pycodestyle, Ned Batchelder‚Äôs McCabe script4 Pylama, including pycodestyle, pydocstyle, PyFlakes and Ned Batchelder‚Äôs McCabe script Radon5 gjslint6 At the moment, my linter of choice is pylint.
FormattersBlackBlack7 the famous formatter. Black became stable software in 29th January 20228. The stability policy is avaible here.
https://www.pylint.org/&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://pypi.org/project/pycodestyle/&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://pypi.org/project/flake8/&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://github.com/PyCQA/mccabe)&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://radon.readthedocs.io/en/latest/&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://atom.io/packages/linter-gjslint&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://pypi.org/project/black/&amp;#160;&amp;#x21a9;&amp;#xfe0e;
https://pypi.org/project/black/22.1.0/&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Python environments</title><link>/python-environments.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/python-environments.html</guid><description>InterpretersTo install different Python interpreters I strongly recommend asdf1.
Let&amp;rsquo;s look at to install Python in two different OSes, macOS and Fedora.
macOSTo install asdf on a macOS, first install the general dependencies with
$ brew install coreutils curl git then install asdf itself with
$ brew install asdf Add to the shell, in our case zsh with:
$ echo -e &amp;#34;\n. $(brew --prefix asdf)/asdf.sh&amp;#34; &amp;gt;&amp;gt; ~/.zshrc Add a plugin, in our case Python, with</description></item><item><title>Python grammar of graphics</title><link>/python-grammar-of-graphics.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/python-grammar-of-graphics.html</guid><description>import pandas as pd mpg = pd.read_csv(&amp;#34;./data/mpg.csv&amp;#34;) mpg.head() mpg cylinders displacement horsepower weight acceleration model_year origin name 0 18.0 8 307.0 130 3504 12.0 70 1 chevrolet chevelle malibu 1 15.0 8 350.0 165 3693 11.5 70 1 buick skylark 320 2 18.0 8 318.0 150 3436 11.0 70 1 plymouth satellite 3 16.0 8 304.0 150 3433 12.0 70 1 amc rebel sst 4 17.0 8 302.0 140 3449 10.</description></item><item><title>Python monkey patching (for readability)</title><link>/python-monkey-patching-for-readability.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/python-monkey-patching-for-readability.html</guid><description>When preparing a Jupyter1 notebook for a workshop on recommendation engines which I&amp;rsquo;ve presented with a colleague, I was faced with the following problem:
&amp;ldquo;How to break a large class definition into several cells so it can be presented step-by-step.&amp;rdquo;
Having the ability to declare a rather complex (and large) Python class in separate cells has several advantages, the obvious one being the ability to fully document each method&amp;rsquo;s functionality with Markdown, rather than comments.</description></item><item><title>Python Pweave</title><link>/python-pweave.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/python-pweave.html</guid><description>InstallingInstalling pweave is a matter of simply running1:
pip3 install pweave At the moment of writing, the editor which, IMO, has the best support for pweave is Atom (using Hydrogen). To install the necessary packages run:
apm install language-weave Hydrogen apm install language-markdown atom-html-preview pdf-view I recommend using a separate pyenv for this.&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Python testing</title><link>/python-testing.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/python-testing.html</guid><description>pytestTests with pytest.</description></item><item><title>Python typing</title><link>/python-typing.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/python-typing.html</guid><description>UnionsFor Python 3.10 onwards1, Unions can be specified with the character |. For instance:
Union[int, str, float] # before 3.10 int | str | float # after 3.10 https://docs.python.org/3/library/typing.html#typing.Union&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Quarkus</title><link>/quarkus.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/quarkus.html</guid><description>Page for Quarkus.
Creating projectsAn example on how to create a Quarkus project:
mvn io.quarkus:quarkus-maven-plugin:2.5.1.Final:create \ -DprojectGroupId=com.okta.rest \ -DprojectArtifactId=quarkus \ -DclassName=&amp;#34;com.okta.rest.quarkus.HelloResource&amp;#34; \ -Dpath=&amp;#34;/hello&amp;#34; \ -Dextensions=&amp;#34;smallrye-jwt,resteasy-reactive&amp;#34;</description></item><item><title>Random Forest</title><link>/random-forest.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/random-forest.html</guid><description>All of the examples presented in this page will be done using Scikit-learn.</description></item><item><title>Random walk</title><link>/random-walk.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/random-walk.html</guid><description>IntroductionA random walk is a stochastic process which describes a path made of consecutive random steps.
GaussianIn Gaussian random walk the steps follow a continuous Gaussian distribution. We will look at two different types, the univariate and multivariate kind.
UnivariateA univariate Gaussian Random Walk, is a series of i.i.d. $\mathcal{N}(0,1)$ random variables such that
$$ \begin{align*} X_0&amp;amp;=0 \ X_t&amp;amp;=X_{t‚àí1}+\epsilon_t \end{align*} $$
Where $t=1,2,\dots$ and $\epsilon_t$ is a series of i.i.d. $\mathcal{N}(0,1)$ random variables.</description></item><item><title>Reading list</title><link>/reading-list.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/reading-list.html</guid><description>What I&amp;rsquo;m reading now and what I&amp;rsquo;ve read in the past.
Reading now The Dark Light Years, by Brian Aldiss (1964) Past readingsBooks I have read recently (most recently first).
Title Cover Plague From Space by Harry Harrison (1965) Duende Meadow, by Paul Cook (1985) Hospital Station, by James White (1962) Retief: Envoy to New Worlds, by Keith Laumer (1972) The Ballad of Beta-2, by Samuel R. Delany (1965) Damnation Alley, by Roger Zelazny (1977) The Practicing Stoic: A Philosophical User&amp;rsquo;s Manual.</description></item><item><title>RHODS</title><link>/rhods.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/rhods.html</guid><description>SandboxRHODS can be trialled on the RHODS developer sandbox.</description></item><item><title>ROC</title><link>/roc.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/roc.html</guid><description>Receiver operating characteristicROC (Receiver operating characteristic).
import pandas as pd data = pd.read_csv(&amp;#34;./data/credit-bias.zip&amp;#34;) We plot on the x the False-Positive rate and plot on the y the True-positive rate.</description></item><item><title>Root Mean Squared Error</title><link>/root-mean-squared-error.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/root-mean-squared-error.html</guid><description>A typical way of measuring the difference between observations and results from a predictor.
The formal definition is:
$$ \begin{aligned} RMSE(\hat{\theta}) &amp;amp;= \sqrt{\operatorname{MSE}(\hat{\theta})} \\ &amp;amp;= \sqrt{\operatorname{E}((\hat{\theta}-\theta)^2)}. \end{aligned} $$
For $N$ observations $Y={y_1, \dots,y_N}$ we can express it as:
$$ RMSE=\sqrt{\frac{\sum _ {n=1}^{N}(\hat{y} _{n}-y _{n})^{2}}{N}}. $$
Exampleimport numpy as np X = 2 * np.random.rand(1000,1) X_b = np.c_[np.ones((1000,1)), X] Y = 1 + 2.5 * X + np.random.randn(1000,1)</description></item><item><title>RSS</title><link>/rss.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/rss.html</guid><description>A page about RSS.
HistoryRSS has been called
RDF Site Summary Rich Site Summary and (most recently) Really Simple Syndication Initially developed by Netscape in 1999 for the my.netscape.com portal.
Articles It&amp;rsquo;s Time to Get Back Into RSS | Daniel Miessler Ask HN: How do you RSS? | Hacker News - https://news.ycombinator.com/item?id=23577265 https://danielmiessler.com/blog/its-time-to-get-back-into-rss/ RSS Feed Best Practises</description></item><item><title>Rust</title><link>/rust.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/rust.html</guid><description>Install$ curl --proto &amp;#39;=https&amp;#39; --tlsv1.2 -sSf https://sh.rustup.rs | sh $ source $HOME/.cargo/env Create a new project using$ cargo new hello_world --bin # for a binary $ cargo new hello_world # for a library Exercises Rust exercises, resolution of the rustlings exercises ReferenceUploading to crates.ioUse
cargo publish Static constants&amp;ldquo;Lazy&amp;rdquo; static constants can be defined using the lazy_static macro from the lazy_static crate.
The crate can be added to the dependencies with</description></item><item><title>Scala</title><link>/scala.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/scala.html</guid><description>Notes on the Scala language.
[Scala cookbook</description></item><item><title>Scala cookbook</title><link>/scala-cookbook.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/scala-cookbook.html</guid><description>val a = (0 until 10) : a: Range = Range(0, 1, 2, 3, 4, 5, 6, 7, 8, 9) println(a.map(i =&amp;gt; i + 10)) : Vector(10, 11, 12, 13, 14, 15, 16, 17, 18, 19)</description></item><item><title>Scikit-learn</title><link>/scikit-learn.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/scikit-learn.html</guid><description>Collection of notes on Python&amp;rsquo;s scikit-learn machine learning library.
Optimising random forest hyperparamaters 15 Lesser-Known Useful SkLearn Models You Should Use Now</description></item><item><title>Search Results</title><link>/search.html</link><pubDate>Sun, 28 Nov 2021 15:21:54 +0000</pubDate><guid>/search.html</guid><description>This file exists solely to respond to /search URL with the related search layout template.
No content shown here is rendered, all content is based in the template layouts/page/search.html
Setting a very low sitemap priority will tell search engines this is not important content.
This implementation uses Fusejs, jquery and mark.js
Initial setupSearch depends on additional output content type of JSON in config.toml
[outputs] home = [&amp;#34;HTML&amp;#34;, &amp;#34;JSON&amp;#34;] Searching additional filedsTo search additional fields defined in front matter, you must add it in 2 places.</description></item><item><title>Serving models with Seldon</title><link>/serving-models-with-seldon.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/serving-models-with-seldon.html</guid><description>Deploying machine learning models in production comes with several requirements. We must manage the model lifecycle. We need reproducibility and typically use containerised workflows.
Seldon1 is a tool which aims at providing a production workflow for machine learning models, allowing to build model serving containers which expose well-defined APIs.
In this post, I&amp;rsquo;ll show how to create a simple model and how to deploy it with Seldon. The model is a customer segmentation one.</description></item><item><title>Shell configurations</title><link>/shell-configurations.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/shell-configurations.html</guid><description>According to Bash&amp;rsquo;s man:
/bin/bash The bash executable /etc/profile The system-wide initialization file, executed for login shells ~/.bash_profile The personal initialization file, executed for login shells ~/.bashrc The individual per-interactive-shell startup file ~/.bash_logout The individual login shell cleanup file, executed when a login shell exits ~/.inputrc Individual readline initialization file With zsh, .zshrc is always read for an interactive shell, whether it&amp;rsquo;s a login one or not.</description></item><item><title>Shell tricks</title><link>/shell-tricks.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/shell-tricks.html</guid><description>TTYReset cursorSometimes, especially when using ANSI escape code heavy applications, your terminal state might get mangled. If that&amp;rsquo;s the case, it&amp;rsquo;s just a matter of performing a VT320 escape sequence to reset the state. For instance, in zsh, using the unhide command:
echo -en &amp;#34;\e[?25h&amp;#34; ResolutionGet screen resolutionLinuxOn linux you can get the x and y resolutions, respectively:
$ xrandr --current | grep &amp;#39;*&amp;#39; | uniq | awk &amp;#39;{print $1}&amp;#39; | cut -d &amp;#39;x&amp;#39; -f1 $ xrandr --current | grep &amp;#39;*&amp;#39; | uniq | awk &amp;#39;{print $1}&amp;#39; | cut -d &amp;#39;x&amp;#39; -f2</description></item><item><title>Site details</title><link>/site-details.html</link><pubDate>Sun, 03 Sep 2023 10:53:23 +0100</pubDate><guid>/site-details.html</guid><description>AssetsThis site&amp;rsquo;s CSS size is 84.1Kb. This, however, includes the following dependencies:
LaTeX processor (MathJax1) custom monospaced font (Jetbrains Mono) custom serif font (Vollkorn) The base CSS is heavily inspired by 58 bytes of css to look great nearly everywhere.
The CSS evolution (size, number of rules, etc) can be tracked over at Project Wallace.
The site is generated from a set of org-mode files using Emacs, which mainly performs the following tasks:</description></item><item><title>SMILE library</title><link>/smile-library.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/smile-library.html</guid><description>IntroductionSMILE is a Machine Learning library for Scala and Java.
It implements:
Classification</description></item><item><title>Spearman correlation</title><link>/spearman-correlation.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/spearman-correlation.html</guid><description>Spearman rank correlationThe Spearman correlation coefficient (or Spearman&amp;rsquo;s $\rho$) measures rank correlation between two variables. It is used to detect the existence of monotonic relationship between variables.
Assuming monotonicity, the Spearman&amp;rsquo;s $\rho$ will take values between $-1$ and $1$, representing completely opposite or identical ranks, respectively1, or, in other words, a negative monotonic relationship or a positive one.
Due to the dependance on ranks, the Spearman&amp;rsquo;s $\rho$ is used for ordinal value, although discrete and continous values are possible.</description></item><item><title>SSH</title><link>/ssh.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/ssh.html</guid><description>ConfigurationConfig fileTo add a known server to the config file, use the following syntax:
Host mymachine HostName 127.0.0.1 User root Port 7654 There is no method to specify or provide on the command line the password in a non-interactive manner for ssh authentication using a OpenSSH built-in mechanism.
ServersAlternativeAn alternative SSH server implementation is tinyssh1
TroubleshootingFailed signingIf you get a error similar to:
sign_and_send_pubkey: signing failed for RSA &amp;#34;/home/foo/.ssh/id_rsa&amp;#34; from agent: agent refused operation foo@example.</description></item><item><title>Statistical dependence</title><link>/statistical-dependence.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/statistical-dependence.html</guid><description>Tests for statistical dependence.
Spearman correlation</description></item><item><title>Streaming anomaly detection</title><link>/streaming-anomaly-detection.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/streaming-anomaly-detection.html</guid><description>Useful algorithms:
Conformalised density and distance-based anomaly detection in time-series data1 elford algorithm Anomaly detection in streams with extreme value theory Robust random cut forest based anomaly detection on streams2 Time-series anomaly detection service at Microsoft3 Half-Space Trees Experimental dataLet&amp;rsquo;s assume the following sequence of observations that we will use with a variety of algorithms. The data is labelled with label with 0 for normal observations and 1 for anomalies.</description></item><item><title>Streaming statistics</title><link>/streaming-statistics.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/streaming-statistics.html</guid><description>Situations where streaming statistics are useful:
Unknown number of observations Online streaming data Dataset too big for local processing For the remainder, let&amp;rsquo;s consider a set of observations $y_i$, weights $w_i$, such that
$$ y_1,\dots,y_i \in \mathbb{R} \ w_1,\dots,w_i\quad w_i \geq 0 $$
Mean and variances A naive approach to calculating a weighted streaming mean, $\widehat{\mu}$ and unbiased streaming variance, , would be to calculate:
$$ \begin{align*} \widehat{\mu}&amp;amp;=\frac{T^{(n)}}{S^{(n)}} \ \widehat{\mathbb{V}}&amp;amp;=\frac{n}{(n-1)S^{(n)}}\left(U^{(n)}-S^{(n)}\widehat{\mu}^2\right) \end{align*} $$</description></item><item><title>Stuff I did in 2023</title><link>/stuff-i-did-in-2023.html</link><pubDate>Sun, 03 Sep 2023 10:53:23 +0100</pubDate><guid>/stuff-i-did-in-2023.html</guid><description>Software fettuccine, a Python library to manage code workflows (PyPi) Python Kubernetes utilities library, k8sutils (PyPi) TrustyAI Kubernetes Operator</description></item><item><title>Syncthing</title><link>/syncthing.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/syncthing.html</guid><description>ServicesystemdTo enable the syncthing service at the user level on a systemd based OS (e.g. Fedora) use
systemctl --user enable --now syncthing.service The service might be lost after package or OS updates. To re-enable it, use:
systemctl --user daemon-reload systemctl --user restart syncthing.service</description></item><item><title>Synthetic Data Generation</title><link>/synthetic-data-generation.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/synthetic-data-generation.html</guid><description>Generating synthetic dataSynthetic data will be used mainly for these scenarios:
Regression Classification Here we will mainly look at the methods provided by scikit-learn to generate synthetic datasets. For more advanced methods, such as using the SDV library please check the SDV page. It support methods such as Gaussian copulas, CTGAN and CopulaGAN.
Regression dataWhat does a regression consist of?
For this section we will mainly use scikit-learn&amp;rsquo;s make_regression method.</description></item><item><title>Synthetic Data Generation with SDV</title><link>/synthetic-data-generation-with-sdv.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/synthetic-data-generation-with-sdv.html</guid><description> Synthetic data with SDV and Gaussian copulas Synthetic data with SDV and CTGAN Synthetic data with SDV and CopulaGAN</description></item><item><title>Synthetic data with SDV and CopulaGAN</title><link>/synthetic-data-with-svd-and-copulagan.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/synthetic-data-with-svd-and-copulagan.html</guid><description>import pandas as pd import warnings warnings.filterwarnings(&amp;#39;ignore&amp;#39;) data = pd.read_csv(&amp;#34;data/svm-hyperparameters-train-features.csv&amp;#34;) data.head() Pclass Sex Age SibSp Parch Fare 0 3 1 22.0 1 0 7.2500 1 1 0 38.0 1 0 71.2833 2 3 0 26.0 0 0 7.9250 3 1 0 35.0 1 0 53.1000 4 3 1 35.0 0 0 8.0500 data.describe(include=&amp;#39;all&amp;#39;) Pclass Sex Age SibSp Parch Fare count 891.000000 891.000000 891.000000 891.000000 891.000000 891.000000 mean 2.308642 0.647587 29.</description></item><item><title>Synthetic data with SDV and CTGAN</title><link>/synthetic-data-with-sdv-and-ctgan.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/synthetic-data-with-sdv-and-ctgan.html</guid><description>Synthetic data with SDV and CTGANimport pandas as pd import warnings warnings.filterwarnings(&amp;#39;ignore&amp;#39;) data = pd.read_csv(&amp;#34;data/svm-hyperparameters-train-features.csv&amp;#34;) data.head() Pclass Sex Age SibSp Parch Fare 0 3 1 22.0 1 0 7.2500 1 1 0 38.0 1 0 71.2833 2 3 0 26.0 0 0 7.9250 3 1 0 35.0 1 0 53.1000 4 3 1 35.0 0 0 8.0500 data.describe(include=&amp;#39;all&amp;#39;) Pclass Sex Age SibSp Parch Fare count 891.000000 891.000000 891.000000 891.000000 891.</description></item><item><title>Synthetic data with SVD and Gaussian copulas</title><link>/synthetic-data-with-svd-and-gaussian-copulas.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/synthetic-data-with-svd-and-gaussian-copulas.html</guid><description>import pandas as pd data = pd.read_csv(&amp;#34;data/svm-hyperparameters-train-features.csv&amp;#34;) data.head() Pclass Sex Age SibSp Parch Fare 0 3 1 22.000 1 0 7.250 1 1 0 38.000 1 0 71.283 2 3 0 26.000 0 0 7.925 3 1 0 35.000 1 0 53.100 4 3 1 35.000 0 0 8.050 data.describe(include=&amp;#34;all&amp;#34;) Pclass Sex Age SibSp Parch Fare count 891.000 891.000 891.000 891.000 891.000 891.000 mean 2.309 0.648 29.759 0.523 0.382 32.</description></item><item><title>t as mixture of Normals</title><link>/t-as-mixture-of-normals.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/t-as-mixture-of-normals.html</guid><description>(Based on Rasmus B√•√•th&amp;rsquo;s post)
A scaled $t$ distribution, with $\mu$ mean, $s$ scale and $\nu$ degrees of freedom, can be simulated
from a mixture of Normals with $\mu$ mean and precisions following a Gamma distribution:
$$ \begin{aligned} y &amp;amp;\sim \mathcal{N}\left(\mu,\sigma\right) \\ \sigma^2 &amp;amp;\sim \mathcal{IG}\left(\frac{\nu}{2},s^2\frac{\nu}{2}\right) \end{aligned} $$
Since I&amp;rsquo;ve recently pickep up again the crystal-gsl in my spare time, I&amp;rsquo;ve decided to replicate the previously mentioned post using a Crystal one-liner.</description></item><item><title>Thompson sampling</title><link>/thompson-sampling.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/thompson-sampling.html</guid><description>Gradient-less counterfactuals.</description></item><item><title>Thompson sampling</title><link>/thompson-sampling.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/thompson-sampling.html</guid><description>NomenclatureConsider:
a set of contexts $\mathcal{X}$ a set of actions $\mathcal{A}$ and rewards in $\mathbb{R}$ RationaleDefinitionFor each iteration $t$:
A &amp;ldquo;player&amp;rdquo; obtains a context¬†$x\in \mathcal{X}$ Plays an action¬†$a\in \mathcal{A}$ Receives a reward¬†$r\in \mathcal{R}$ This rewards is distributed according to the context and the resulting action The player&amp;rsquo;s goal is to execute actions that maximize the cumulative rewards. ImplementationThe implementation will focus on these concepts:
a likelihood function $P(r|\theta ,a,x)$ a set $\Theta$ of parameters $\theta$ of the distribution of $r$ a prior distribution $P(\theta )$ on these parameters past observations triplets $\mathcal{D}={(x;a;r)}$ a posterior distribution $P(\theta |{\mathcal {D}})\propto P({\mathcal {D}}|\theta )P(\theta )$, where $P({\mathcal {D}}|\theta )$ is the likelihood function.</description></item><item><title>Time-series analysis</title><link>/time-series-analysis.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/time-series-analysis.html</guid><description>IntroductionA time-series is commonly described as a data set that captures observations over time.
ConceptsPeaks and troughsLet&amp;rsquo;s start by creating a random walk.
import numpy as np import pandas as pd N = 10000 step_set = [-1, 0, 1] origin = np.zeros((1, 1)) step_shape = (N, 1) steps = np.random.choice(a=step_set, size=step_shape) path = np.concatenate([origin, steps]).cumsum(0) df = pd.DataFrame(path, columns =[&amp;#39;y&amp;#39;]) from scipy.signal import find_peaks subset = df.head(100) peaks = find_peaks(subset[&amp;#34;y&amp;#34;]) troughs = find_peaks(-subset[&amp;#34;y&amp;#34;]) peaks (array([ 9, 20, 30, 37, 48, 52, 64, 77, 79, 84, 92]), {}) AutocorrelationPandas provides an autocorrelation1 plot function.</description></item><item><title>Transformation functions</title><link>/transformation-functions.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/transformation-functions.html</guid><description/></item><item><title>TrustyAI-KServe conversions</title><link>/trustyai-kserve-conversions.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/trustyai-kserve-conversions.html</guid><description>SynopsisInference data is represented in TrustyAI1 using objects implementing the Prediction interface. The objects always include two general entities representing collections of inputs (PredictionInput) and outputs (PredictionOutput). These in turn are comprised of Features and Outputs, respectively.
Communication with KServe/ModelMesh deployed models is done, however, using gRPC, with the KServe v2 protocol.
The basis of prediction requests is the KServe ModelInferenceRequest message, where model responses are based on the ModelInferenceResponse message.</description></item><item><title>Typescript</title><link>/typescript.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/typescript.html</guid><description>ReadonlyTypescript supports the readonly attribute. Assume the following function to sort arrays:
function sortNumbers(array: Array&amp;lt;number&amp;gt;) { return array.sort((a, b) =&amp;gt; a - b) } const numbers = [7, 3, 5] const sortedNumbers = sortNumbers(numbers) console.log(sortedNumbers) console.log(numbers) We can see that the function sortNumbers changed both arrays. We can add the Readonly type, but this alone won&amp;rsquo;t work. The array still needs to be changed in place and this will generate an error.</description></item><item><title>Typography</title><link>/typography.html</link><pubDate>Sun, 03 Sep 2023 10:53:23 +0100</pubDate><guid>/typography.html</guid><description>SummaryA collection of notes on typography.
Monospaced fontsCurrently I am favouring the Iosevka font for monospaced.
The Monoid font has a post to explain some design decisions1. Serif FontsVollkorn is the font used currently in this site.
https://medium.com/larsenwork-andreas-larsen/class-based-contextual-positioning-in-monospaced-fonts-cb6b8b9ffe6f&amp;#160;&amp;#x21a9;&amp;#xfe0e;</description></item><item><title>Unfairness detection</title><link>/unfairness-detection.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/unfairness-detection.html</guid><description/></item><item><title>Unit testing</title><link>/unit-testing.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/unit-testing.html</guid><description>Unit test should start with should. Unit Testing is Overrated Start test names with &amp;lsquo;should&amp;rsquo; Still No Consensus On Testing Private Methods FrameworksPythonUnit testing with Python is typically done with pytest.</description></item><item><title>UNIX philosophy</title><link>/unix-philosophy.html</link><pubDate>Sun, 28 May 2023 11:45:56 +0100</pubDate><guid>/unix-philosophy.html</guid><description>IntroductionDouglas McIlroy1 summarized the Unix philosophy as follows:
Write programs that do one thing and do it well. Write programs to work together. Write programs to handle text streams, because that is a universal interface. Philosophy?The UNIX philosophy of &amp;ldquo;small is beautiful&amp;rdquo; and &amp;ldquo;do one thing and do it well&amp;rdquo; is often compared to the minimalist philosophy of the Zen Buddhism. The UNIX philosophy can also be compared to the philosophy of Socrates, which emphasizes the importance of understanding the essence of things and not getting bogged down by unnecessary complexity.</description></item><item><title>Vim keys</title><link>/vim-keys.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/vim-keys.html</guid><description>Copy paste Press v to select characters, or uppercase V to select whole lines y to copy Press P to paste before the cursor, or p to paste after</description></item><item><title>Vue</title><link>/vue.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/vue.html</guid><description>Download a filesaveFile: function() { const data = JSON.stringify(this.myData) const blob = new Blob([data], {type: &amp;#39;text/plain&amp;#39;}) const e = document.createEvent(&amp;#39;MouseEvents&amp;#39;), a = document.createElement(&amp;#39;a&amp;#39;); a.download = &amp;#34;myData.json&amp;#34;; a.href = window.URL.createObjectURL(blob); a.dataset.downloadurl = [&amp;#39;text/json&amp;#39;, a.download, a.href].join(&amp;#39;:&amp;#39;); e.initEvent(&amp;#39;click&amp;#39;, true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null); a.dispatchEvent(e); }</description></item><item><title>Workflow</title><link>/workflow.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/workflow.html</guid><description>BackupExternal mediaSince I switch OSes frequently [1]1. I macOS and GNU/Linux (specifically Fedora and Ubuntu) daily, Windows seldomly. having a minimum-hassle filesystem for my external drives would be very convenient. exFAT [2]2. ExFAT. seems to me like the best solution. In fact, exFAT is the default FS for SD cards and USB flash drives with more than 32Gb. So perhaps, if have a large-ish USB pen or an external drive, chances are you don&amp;rsquo;t even need to reformat it.</description></item><item><title>XGBoost</title><link>/xgboost.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/xgboost.html</guid><description>IntroductionXGBoost1 is a popular regularizing gradient boosting framework.
InstallationIn most systems, installing XGBoost can be done simply by using pip
$ pip install xgboost ExampleTraining XGBoost with the credit-bias dataset.
import pandas as pd data = pd.read_csv(&amp;#34;../data/credit-bias-train.zip&amp;#34;) data.head() NewCreditCustomer Amount Interest LoanDuration Education NrOfDependants EmploymentDurationCurrentEmployer IncomeFromPrincipalEmployer IncomeFromPension IncomeFromFamilyAllowance ... Mortgage Other Owner Owner_with_encumbrance Tenant Entrepreneur Fully Partially Retiree Self_employed 0 False 2125.0 20.97 60 4.0 0.0 6.0 0.0 301.0 0.0 .</description></item><item><title>zsh</title><link>/zsh.html</link><pubDate>Sat, 02 Sep 2023 17:28:34 +0100</pubDate><guid>/zsh.html</guid><description>FunctionsDefault argumentsExample of a function with default arguments in zsh
function e() { if [ &amp;#34;$1&amp;#34; != &amp;#34;&amp;#34; ] then subl $1 else subl . fi } File name without the extensionIf you want the full path without the extension:
$ myfile=/path/to/story.txt $ echo ${myfile:r} /path/to/story $ myfile=story.txt $ echo ${myfile:r} story If you want just the file name minus the path:
$ myfile=/path/to/story.txt $ echo ${myfile:t} story.txt Check this out you can combine those two symbols!</description></item></channel></rss>